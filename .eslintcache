[{"D:\\cn-backend-project-2\\book-portal\\src\\index.js":"1","D:\\cn-backend-project-2\\book-portal\\src\\components\\App.js":"2","D:\\cn-backend-project-2\\book-portal\\src\\services\\DBService.js":"3","D:\\cn-backend-project-2\\book-portal\\src\\services\\openDB.js":"4"},{"size":286,"mtime":1611498021654,"results":"5","hashOfConfig":"6"},{"size":2606,"mtime":1611507782181,"results":"7","hashOfConfig":"6"},{"size":198,"mtime":1611498246778,"results":"8","hashOfConfig":"6"},{"size":85,"mtime":1611499469056,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1n47cv7",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cn-backend-project-2\\book-portal\\src\\index.js",[],["20","21"],"D:\\cn-backend-project-2\\book-portal\\src\\components\\App.js",["22","23","24","25"],"import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { openDB } from 'idb';\nimport {idb} from '../services/openDB'\nimport ReactPaginate from 'react-paginate';\n\n\n\nconst App = () => {\n  const [books, setBooks] = useState([])\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0)\n  const [offset, setOffset] = useState(0);\n\n  const demo2 = async (booksData) => {\n    const db1 = await idb.db1;\n    booksData.map(book =>{\n      \n      db1.put('books', book, book.bookID)\n        // .then(result => {\n        //   console.log('success!');\n        // })\n        // .catch(err => {\n        //   console.error('error: ', err);\n        // });\n    })\n    \n    \n  }\n\n  const getData = () =>{\n    axios \n      .get('https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json')\n      .then(res => {\n        console.log(res.data);\n        demo2(res.data);\n      })\n      .then(() => {\n        console.log('query done')\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  const callDB = async () =>{\n    const db1 = await idb.db1;\n    const data = await db1.getAll('books')\n    console.log(data);\n    // setBooks(data);\n    const slice = data.slice(offset, offset + perPage)\n                const postData = slice.map(pd => <div key={pd.bookID}>\n                    <p>{pd.title}</p>\n                </div>)\n                setBooks(postData)\n                setPageCount(Math.ceil(data.length / perPage))\n\n  }\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1)\n};\n  /* Only gets executed once  */\n  useEffect(() =>{\n    getData();\n    \n  }, [])\n  useEffect(() =>{\n    callDB();\n    \n  }, [offset])\n\n\n  return (\n    <div className=\"app\">\n      <h1>BOOKS</h1>\n      {books}\n      <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n      {/* {books.length > 0 && */}\n        {/* <ul>\n        {books.map(book =>(\n          <li key={book.bookID}> {book.title}</li>\n        ))}\n      </ul> */}\n      {/* npm install react-paginate */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\cn-backend-project-2\\book-portal\\src\\services\\DBService.js",[],"D:\\cn-backend-project-2\\book-portal\\src\\services\\openDB.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":4,"column":10,"nodeType":"32","messageId":"33","endLine":4,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":18,"column":24,"nodeType":"36","messageId":"37","endLine":18,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":68,"column":6,"nodeType":"40","endLine":68,"endColumn":8,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":72,"column":6,"nodeType":"40","endLine":72,"endColumn":14,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'openDB' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["46"],"React Hook useEffect has a missing dependency: 'callDB'. Either include it or remove the dependency array.",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},{"desc":"50","fix":"51"},"Update the dependencies array to be: [getData]",{"range":"52","text":"53"},"Update the dependencies array to be: [callDB, offset]",{"range":"54","text":"55"},[1692,1694],"[getData]",[1739,1747],"[callDB, offset]"]